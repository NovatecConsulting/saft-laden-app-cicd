name: "CI/CD Pipeline"
on:
    push:
    pull_request:
    workflow_dispatch:
env:
    ANGULAR_CLI_VERSION: 13
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
        - name: "Check out Git repository"
          uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f #v2: v2.3.4 available
        - name: "Use Node.js 18"
          uses: actions/setup-node@f1f314fca9dfce2769ece7d933488f076716723e #v1: v2.x available
          with:
            node-version: 18
        - name: "Install CLI tools"
          run: npm install -g @angular/cli@$ANGULAR_CLI_VERSION
        - name: "Install application minimalistically"
          run: |
            npm install --ignore-scripts
            cd frontend
            npm install --ignore-scripts --legacy-peer-deps
  docker:
    runs-on: ubuntu-latest
    steps:
        - name: "Check out Git repository"
          uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f #v2: v2.3.4 available
        - name: "Set up QEMU"
          uses: docker/setup-qemu-action@27d0a4f181a40b142cce983c5393082c365d1480 #v1: V1.2.0 available
        - name: "Set up Docker Buildx"
          uses: docker/setup-buildx-action@94ab11c41e45d028884a99163086648e898eed25 #v1
        - name: "Login to DockerHub"
          uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9 #v1.10
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        - name: "Set tag & labels for ${{ github.ref }}"
          run: |
            if [ "$GITHUB_REF" == "refs/heads/master" ]; then
            echo "DOCKER_TAG=latest" >> $GITHUB_ENV
            else
            echo "DOCKER_TAG=snapshot" >> $GITHUB_ENV
            fi
            echo "VCS_REF=`git rev-parse --short HEAD`" >> $GITHUB_ENV
            echo "BUILD_DATE=`date -u +”%Y-%m-%dT%H:%M:%SZ”`" >> $GITHUB_ENV
        
